#include<iostream>
using namespace std;

class MyString
{
private:
char *itsString;

public:

MyString(int);
MyString(const char *const);
//~MyString();
int SizeOf();
void Show();

void DeleteAfter(int);
void DeleteBefore(int);
};

MyString::MyString(int a)
{
itsString=new char[a];
for (int i=0; i<a; i++)
itsString[i]='0';
itsString[a-1]='\0';
}

MyString::MyString(const char * const s)
{
int l=0;
while (s[l]!=NULL)
{l++;}
itsString=new char[l+1];
for (int i=0;i<l;i++)
itsString[i]=s[i];
itsString[l]='\0';
}

/*MyString::~MyString()
{
delete [] itsString;
}*/

int MyString::SizeOf()
{
int n=0;
while(itsString[n]!='\0')
{n++;}
return n;
}

void MyString::Show()
{
for (int i=0; itsString[i]!='\0';i++)
cout << itsString[i];
cout << endl;
}

void MyString::DeleteBefore(int a)
{
MyString tmp((this->SizeOf())-a+2);
int i;
for (i=(a-1);i<this->SizeOf();i++)
tmp.itsString[i-a+1]=this->itsString[i];
delete [] itsString;
itsString=tmp.itsString;}

void MyString::DeleteAfter(int a)
{
MyString tmp(a+1);
int i;
for (i=0;i<a;i++)
tmp.itsString[i]=this->itsString[i];
delete [] itsString;
itsString=tmp.itsString;
}

void main()
{
  setlocale(LC_ALL,"rus");

	MyString *v1=new MyString("Hey, apple");
    MyString *v2=new MyString("Hello, world!");


    cout << "Первая строка: " << endl;
    v1->Show();
    cout << "Вторая строка: " << endl;
    v2->Show();
	int a;
	cout << "Введите позицию символа до которого будет происходить удаление: ";
	cin >> a;
	v1->DeleteBefore(a);
	v1->Show();
	int b;
	cout << "Введите позицию символа после которого будет происходить удаление: ";
	cin >> b;
	v2->DeleteAfter(b);
	v2->Show();


	cin.get();cin.get();
}
